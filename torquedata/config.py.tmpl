# Database configuration for torquedata
POSTGRES_DB_NAME="__DATABASE_NAME__"
POSTGRES_DB_USER="__DATABASE_USER__"
POSTGRES_DB_PASSWORD="__DATABASE_PASSWORD__"

# Secret key as needed by django.  See
# https://docs.djangoproject.com/en/3.1/ref/settings/#std:setting-SECRET_KEY
SECRET_KEY="__RANDOM_SECRET_KEY__"

# A list of jinja2 extensions to enable when rendering templates
# See an extension list: https://jinja.palletsprojects.com/en/2.11.x/extensions/
# For example, to enable the "jinja2.ext.do" extension you would set this to
# ENABLED_JINJA_EXTENSIONS=['jinja2.ext.do']
ENABLED_JINJA_EXTENSIONS=[]

# This is where uploaded files go (like attachments).
# See https://docs.djangoproject.com/en/3.1/ref/settings/#media-root
#
# Note: Leaving this as is will probably clutter up your checkout
MEDIA_ROOT=os.path.join(os.path.dirname(os.path.dirname(__file__)), "static")

# All the search filters for cached search items.  These must implement
# utils.Filter, and that class has more documentation on what must be done.
#
# In short, the filters must provide a name, translate the documents into
# in values that can be filtered upon.
from core import utils
class ExampleFilter(utils.Filter):
    def name(self):
        return "example"

    def display_name(self):
        return "Example"

    def document_value(self, document):
        # Filter on the first character of the key
        return document.key[0]

FILTERS=[
    ExampleFilter()
]
